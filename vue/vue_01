一：vue入门
vue最重要的结构分为：
               data
               methods
               watch
               其中data存放页面上的一些变量值，methods用户页面上定义的方法，watch用于监听data数据中某个值的变化，触发某个方法。
               
 vue常用的指令有：
             v-text ,v-html , v-for ,v-if , v-model, v-bind 等
             v-model 对应data中的数据，常用于表单数据的双向绑定
             v-on:keyup.enter ="additme",对应回车事件的执行
             localStorage:h5的新功能，用来存放一些变量数据
             
 export default {}     类似于new vue(){}


-----------------页面----------------
<template>
  <div id="app">
   <h1 v-html="title"></h1>
    <input type="text" v-model="newItem" v-on:keyup.enter="addNew">
    <ul>
      <li v-for="item in items" v-bind:class="{finished:item.finish}" v-on:click="toggleclick(item)">{{item.lable}}</li>
    </ul>
  </div>
</template>

<script>
  import  Store from './store'

export default {
  data:function(){
     return{
       title:"<span style='color:red'>ssss</span>this is a todo list1",
       items:Store.fetch(),
       liclass:"thisisclass",
       class2:"ddd",
       newItem:''
     }
  },
  methods:{
    toggleclick:function (item) {
       item.finish=!item.finish;
    },
    addNew:function () {
      this.items.push({
        lable:this.newItem,
        finish:false
      });
      this.newItem=''; //clean
    }
  },
  watch:{
     //监听items的变化，每次变化增加或减少都触发监听方法
      items:{
        handler:function (items) {
          console.log(items)
          Store.save(this.items)
        },
        deep:true //设置成true是监听的对象中的某个属性的变化也会被检测到
      }
  }
}
</script>

<style>
  .finished{
    text-decoration: underline;
  }
#app {
  font-family: 'Avenir', Helvetica, Arial, sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  text-align: center;
  color: #2c3e50;
  margin-top: 60px;
}
</style>


---------------Store.js---------------------
const STORE_KEY="testKey";
export  default {
     fetch(){
       return JSON.parse(window.localStorage.getItem(STORE_KEY) || '[]');
     },
     save(items){
         window.localStorage.setItem(STORE_KEY,JSON.stringify(items));
     }

}





